apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-prom
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets: ["localhost:9090"]
      - job_name: web
        dns_sd_configs:
          - names:
              - web-scrape
            type: "A"
            port: 8090
            refresh_interval: 60s
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 65534:65534 /prometheus"]
          volumeMounts:
            - name: k8s-prom
              mountPath: /etc/k8s-prom
            - name: data
              mountPath: /prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.14.0
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file=/etc/k8s-prom/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/usr/share/prometheus/console_libraries"
            - "--web.console.templates=/usr/share/prometheus/consoles"
          volumeMounts:
            - name: k8s-prom
              mountPath: /etc/k8s-prom
            - name: data
              mountPath: /prometheus
          ports:
            - containerPort: 9090
      volumes:
        - name: k8s-prom
          configMap:
            name: k8s-prom
        - name: data
          persistentVolumeClaim:
            claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: web-scrape
  labels:
    app: web
spec:
  selector:
    app: web
  clusterIP: "None"
  ports:
    - protocol: TCP
      port: 8090
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
