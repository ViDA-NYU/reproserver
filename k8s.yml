apiVersion: v1
kind: ConfigMap
metadata:
  name: config
data:
  s3.url: http://minio:9000
  s3.bucket-prefix: prod-
  s3.client-url: http://192.168.99.100:30090
  proxy.url: http://{short_id}-{port}.web.192.168.99.100.xip.io:30081/
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-config
data:
  runner.namespace: default
  runner.pod_spec: |
    restartPolicy: Never
    serviceAccountName: reproserver-sa
    containers:
      - name: docker
        image: docker:19.03.5-dind
        securityContext:
          privileged: true
        args:
          - "dockerd"
          - "--host=tcp://127.0.0.1:2375"
          - "--storage-driver=overlay2"
          - "--userns-remap=default"
          - "--insecure-registry=registry:5000"
      - name: runner
        image: reproserver_web
        imagePullPolicy: IfNotPresent
        args: ["python3", "-c", "import sys; from reproserver.run import K8sRunner; K8sRunner._run_in_pod(*sys.argv[1:])"]
        env:
          - name: S3_KEY
            valueFrom:
              secretKeyRef:
                name: reproserver-secret
                key: s3_key
          - name: S3_SECRET
            valueFrom:
              secretKeyRef:
                name: reproserver-secret
                key: s3_secret
          - name: S3_URL
            valueFrom:
              configMapKeyRef:
                name: config
                key: s3.url
          - name: S3_BUCKET_PREFIX
            valueFrom:
              configMapKeyRef:
                name: config
                key: s3.bucket-prefix
          - name: S3_CLIENT_URL
            valueFrom:
              configMapKeyRef:
                name: config
                key: s3.client-url
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: reproserver-secret
                key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: reproserver-secret
                key: password
          - name: POSTGRES_HOST
            value: postgres
          - name: POSTGRES_DB
            value: reproserver
          - name: CONNECTION_TOKEN
            valueFrom:
              secretKeyRef:
                name: reproserver-secret
                key: connection_token
          - name: DOCKER_HOST
            value: tcp://127.0.0.1:2375
          - name: REGISTRY
            value: registry:5000
          - name: REPROZIP_USAGE_STATS
            value: "off"
        ports:
          - containerPort: 5597
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: web
    spec:
      serviceAccountName: reproserver-sa
      containers:
        - name: web
          image: reproserver_web
          imagePullPolicy: IfNotPresent
          env:
            - name: WEB_PROXY_URL
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: proxy.url
            - name: S3_KEY
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: s3_key
            - name: S3_SECRET
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: s3_secret
            - name: S3_URL
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: s3.url
            - name: S3_BUCKET_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: s3.bucket-prefix
            - name: S3_CLIENT_URL
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: s3.client-url
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: password
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_DB
              value: reproserver
            - name: CONNECTION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: connection_token
            - name: REPROZIP_USAGE_STATS
              value: "off"
            - name: RUNNER_TYPE
              value: k8s
            - name: K8S_CONFIG_DIR
              value: /etc/k8s-config
            - name: ZENODO_TOKEN
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: zenodo_token
          volumeMounts:
            - name: k8s-config
              mountPath: /etc/k8s-config
          ports:
            - containerPort: 8000
            - containerPort: 8001
            - containerPort: 8090
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: k8s-config
          configMap:
            name: k8s-config
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: registry
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: registry:2.6
          ports:
            - containerPort: 5000
          volumeMounts:
            - mountPath: /var/lib/registry
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: registry-pvc
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:9.6
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: reproserver-secret
                  key: password
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  labels:
    app: registry
spec:
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    app: web
spec:
  selector:
    app: web
  type: NodePort
  ports:
    - protocol: TCP
      port: 8000
      nodePort: 30080
---
apiVersion: v1
kind: Service
metadata:
  name: web-proxy
  labels:
    app: web
spec:
  selector:
    app: web
  type: NodePort
  ports:
    - protocol: TCP
      port: 8001
      nodePort: 30081
